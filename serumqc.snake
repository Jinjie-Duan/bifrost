#!/usr/bin/env python3
import re
import pandas
import sys
import os

sys.path.append(os.path.abspath("lib"))
import serum  # all serum lib functions also have access to the config file to prevent reduce excess parameter passing

configfile: "config/config.yaml"
# from pytools.persistent_dict import PersistentDict
# storage = PersistentDict("qcquickie_storage")
# snakemake -s ~/code/serumqc/snakefiles/serumqc.snake --config R1_reads={read_location} R2_reads={read_location} Sample=Test
# snakemake -s ~/code/serumqc/snakefiles/serumqc.snake --config R1_reads=~/test/data/nextseq/FHA3_S64_L555_R1_001.fastq.gz R2_reads=~/test/data/nextseq/FHA3_S64_L555_R2_001.fastq.gz Sample=Test
# requires --config R1_reads={read_location},R2_reads={read_location}

sample = str(config["Sample"])
R1 = str(config["R1_reads"])
R2 = str(config["R2_reads"])

log_folder = "log/"
if not os.path.isdir(log_folder):
    os.mkdir(log_folder)

include: "snakefiles/checks.snake"
include: "snakefiles/read_manipulation.snake"
include: "snakefiles/assembly.snake"
include: "snakefiles/read_mapping.snake"
include: "snakefiles/variant_calling.snake"
include: "snakefiles/analysis.snake"
include: "snakefiles/summarize.snake"
include: "snakefiles/qc.snake"
# my understanding is all helps specify final output
onsuccess:
    print("Workflow complete")
    output = ["status.txt"]
    with open(output[0], "w") as status:
        status.write("Success")
onerror:
    print("Workflow error")
    output = ["status.txt"]
    with open(output[0], "w") as status:
        status.write("Failure")

rule all:
    input:
        "assembly/contigs.fasta",
        "summaries/serumqc_info.yaml",
        "variant_calling",
        "contamination/kraken_report.txt",
        "contamination/kraken_contigs.txt",
        "checks/species.txt",
        "annotations",
        "ariba_resfinder",
        "quast",
        "mapping/contigs.fasta",
        "mapping/contigs.sam",
        "mapping/contigs_elprep.sam",
        "mapping/contigs_elprep.bam",
        "mapping/contigs_elprep.bam.bai",
        "mapping/contigs.depth"
