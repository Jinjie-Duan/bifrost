import re
import pandas
# from pytools.persistent_dict import PersistentDict
# size estimation from kmers as well with jellyfish?
# storage = PersistentDict("qcquickie_storage")
# alternative is to do a quick qc on basepairs followed by a more rigorous assembly

configfile: os.path.join(os.path.dirname(workflow.snakefile), "../config/config.yaml")
# requires --config R1_reads={read_location},R2_reads={read_location}
sample = config["Sample"]
R1 = config["R1_reads"],
R2 = config["R2_reads"],

rule run__assembly:
    message:
        "Denovo assembly of reads"
    input:
        reads = (R1, R2)
    output:
        "assembly_done"
    params:
        adapters = os.path.join(os.path.dirname(workflow.snakefile), "../lib/adapters.fasta")
    shell:
        """
        mkdir assembly
        cd assembly
        bbduk.sh in={input.reads[0]} in2={input.reads[1]} out=filtered.fq ref={params.adapters} ktrim=r k=23 mink=11 hdist=1 tbo minavgquality=14 &>> assembly.log
        bbmerge.sh in=filtered.fq out=merged.fq outu=unmerged.fq &>> assembly.log
        spades.py -k 21,33,55,77 -s merged.fq,unmerged.fq -o spades &>> assembly.log
        mv spades/contigs.fasta spades_contigs.fasta
        cd ..
        touch assembly_done
        """
