import re
import pandas
# from pytools.persistent_dict import PersistentDict
# size estimation from kmers as well with jellyfish?
# storage = PersistentDict("qcquickie_storage")
# alternative is to do a quick qc on basepairs followed by a more rigorous assembly

configfile: os.path.join(os.path.dirname(workflow.snakefile), "config/config.yaml")
# requires --config R1_reads={read_location},R2_reads={read_location}
sample = config["Sample"]
R1 = config["R1_reads"],
R2 = config["R2_reads"],

rule run__analysis:
    message:
        "Denovo assembly of reads"
    input:
        reads = (R1, R2)
    output:
        "assembly_done"
    log:
        "qcquickie/qcquickie.log"
    shell:
        # make sure to overwrite k values with merged reads
        """
        cd analysis
        ariba run /srv/data/DB/ariba/resfinder {input.reads[0]} {input.reads[1]} ariba_res --noclean
        ariba run /srv/data/DB/ariba/plasmidfinder {input.reads[0]} {input.reads[1]} ariba_plasmid --noclean
        cd ..
        touch analysis_done
        """
